#!/usr/bin/env python

import os

import citadel.nodes.node


class Header(citadel.nodes.node.Base):

    def __init__(self, yml, path, environment):
        super(Header, self).__init__(yml, path, environment)

        self.output.append('#!/usr/bin/env bash')
        self.output.append('')
        self.output.append('### Generated by CITADel ###')
        self.output.append('set -ue')
        self.output.append('set -x')
        self.output.append('set -o pipefail')
        if self.environment:
            self.output.append('### CLI ENVIRONMENT args')
            for line in self.environment.split():
                if '=' in line:
                    name, value = line.split('=', 1)
                    # Periods make it an invalid identifier in bash
                    # so we ignore it
                    if '.' in name:
                        continue
                    self.output.append('export %s="%s"' % (name, value))
                else:
                    logging.debug('Ignoring invalid export line: %s', line)
        self.output.append('\nexport PWD="%s"\n' % (os.getcwd()))
